// /b_02_scss_list_dic.scss
/* b_02_scss_list_dic.css */

//------------------------
//color
$yellow : #fa0;
$blue : (#00f, #0af, #00f, #7af, #adf); // list

// $red : (#f00, #f0a, #faa, #f07 );

$psuedoCode : (
  "hover":#87f, 
  "focus":#4f3, 
  "active":#fda, 
  "selected": #dfd
  ); // dic(map)


/* 
$psuedoCode2 : (
  "hover": #ffa,
  "focus": #f0a,
  "active": #ddf
);
*/

//------------------------

#wrap {
  width: 100%; height: 100%;
  background-color: lighten($yellow, 30%);
}

.list_area {
  width: 100px; height: auto;
  & > li {
    width: 100%; 
    background-color: nth($blue,1); // list
  &:hover {background-color: map-get($psuedoCode,"hover");} 
  &:focus {background-color: map-get($psuedoCode,"focus");}
  } // li
}
// &:hover {background-color: map-get($psuedoCode2,"hover");}

$coffee: ("esspress","latte","choco","vanila","other"); // list
// #{변수명, 숫자} 인터폴레이션기법으로 내용을 담을 수 있게 처리하는 형태. `${}`
.coffee_#{nth($coffee,1)} {width: 100%;} // .coffee_ 는 이름을 만드려고 붙인것
.coffee_#{2} { width: 100%; }

// scss 반복문
// for(변수명 in 배열){}
// @for $i from 시작숫자 through 마지막숫자 {}

// 숫자 1 부터 5 까지 5번 반복수행하면서 해당 숫자는 매개변수 $key에 임의 할당
@for $key from 1 through 5 {
// .area_esspress{}, .area_latte{}, .area_ ...의 형태로 
// .area_(이름)에
// $coffee 변수 내부에 있는 이름을 각각 할당하기위해 보간법인 #{} 를 사용.
// list형식을 사용하기 위해서는 nth(변수명, 순번)

// $coffee: ("esspress","latte","choco","vanila","other");
// $blue: (#00f, #0af, #0df, #7af, #adf);

  .area_#{ nth($coffee, $key) } {
    width:$key * 10%; height:100%;
    background-color: nth($blue, $key);
    margin:auto; padding:0; box-sizing:border-box;
    }
  }

  $device: 768;
  #viewBox {
    width: 100%; height:600 / $device * 100vw;
  }
/* -----------------------------------------*/

  // 변수 - $변수명 : 값
  // 중첩 - #box{ >li{} }
  // @mixin 생성 / @include 불러오기

  @mixin blind(){
    display: block; width: 0; height: 0;
    position: absolute; z-index: -1; 
    clip: rect(0 0 0 0); 
    overflow: hidden;
  }

  @mixin bar(){
    &:after,&::after{
      content: ""; display: block; clear: both;
    }
  } // @mixin bar();

  @mixin full(){
    display: block; width: 100%; height: 100%;
    @content; // 정의내린 상태에서 무언가를 첨가하고싶을때 사용한다. 사용한 부분만이 추가가 가능하다.
    & > span {
      @include blind();
    }
  } // @mixin full();

  .nav_area {
    float: right;
    width: 960px; height: auto;
    & > li{
      float: left;
      width: auto; height: 30px;
    } // li
    a { @include full(){ background-color: $yellow;} } // a
    // span { @include blind(); }
    @include bar();
  } // nav_area


// list - $var: (v1, v2, v3); nth($var, 숫자) v
// map - $map: (a:v1, b:v2, c:v3); map-get($map, key); v

// @for - @for $i from startN through lastN {}
// #{} - 숫자나 이름을 있는 형태 그대로 사용할 때 (주로 선택자)
// @mixin - 기능을 만들때, @include - 기능을 사용할때
// @content - @mixin 내부에서 기능을 추가할때

